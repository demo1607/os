#include <stdio.h>
#include <stdlib.h>

// Simulated semaphore variables
int mutex = 1;
int full = 0;
int empty = 10;

// A counter to simulate items
int data = 0;

// Function to simulate wait operation
int wait(int s) {
    return --s;
}

// Function to simulate signal operation
int signal(int s) {
    return ++s;
}

void producer() {
    mutex = wait(mutex);
    full = signal(full);
    empty = wait(empty);
    data++;  // Producing an item
    printf("\nProducer produces item number: %d\n", data);
    mutex = signal(mutex);
}

void consumer() {
    mutex = wait(mutex);
    full = wait(full);
    empty = signal(empty);
    printf("\nConsumer consumes item number: %d\n", data);
    data--;  // Consuming the last item
    mutex = signal(mutex);
}

int main() {
    int choice;
    printf("\n1. Enter 1 for Producer"
           "\n2. Enter 2 for Consumer"
           "\n3. Enter 3 to Exit");

    while (1) {
        printf("\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            if ((mutex == 1) && (empty != 0)) {
                producer();
            } else {
                printf("\nBuffer is full! Cannot produce.");
            }
            break;

        case 2:
            if ((mutex == 1) && (full != 0)) {
                consumer();
            } else {
                printf("\nBuffer is empty! Cannot consume.");
            }
            break;

        case 3:
            exit(0);
            break;

        default:
            printf("\nInvalid choice!");
        }
    }

    return 0;
}
